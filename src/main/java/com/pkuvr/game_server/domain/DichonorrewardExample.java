package com.pkuvr.game_server.domain;

import java.util.ArrayList;
import java.util.List;

public class DichonorrewardExample {
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table DicHonorReward
     *
     * @mbggenerated Tue Jan 06 15:42:50 CST 2015
     */
    protected String orderByClause;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table DicHonorReward
     *
     * @mbggenerated Tue Jan 06 15:42:50 CST 2015
     */
    protected boolean distinct;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table DicHonorReward
     *
     * @mbggenerated Tue Jan 06 15:42:50 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table DicHonorReward
     *
     * @mbggenerated Tue Jan 06 15:42:50 CST 2015
     */
    public DichonorrewardExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table DicHonorReward
     *
     * @mbggenerated Tue Jan 06 15:42:50 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table DicHonorReward
     *
     * @mbggenerated Tue Jan 06 15:42:50 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table DicHonorReward
     *
     * @mbggenerated Tue Jan 06 15:42:50 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table DicHonorReward
     *
     * @mbggenerated Tue Jan 06 15:42:50 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table DicHonorReward
     *
     * @mbggenerated Tue Jan 06 15:42:50 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table DicHonorReward
     *
     * @mbggenerated Tue Jan 06 15:42:50 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table DicHonorReward
     *
     * @mbggenerated Tue Jan 06 15:42:50 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table DicHonorReward
     *
     * @mbggenerated Tue Jan 06 15:42:50 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table DicHonorReward
     *
     * @mbggenerated Tue Jan 06 15:42:50 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table DicHonorReward
     *
     * @mbggenerated Tue Jan 06 15:42:50 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table DicHonorReward
     *
     * @mbggenerated Tue Jan 06 15:42:50 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value,
                                    String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property
                        + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1,
                                    Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property
                        + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andRewardidIsNull() {
            addCriterion("rewardId is null");
            return (Criteria) this;
        }

        public Criteria andRewardidIsNotNull() {
            addCriterion("rewardId is not null");
            return (Criteria) this;
        }

        public Criteria andRewardidEqualTo(Integer value) {
            addCriterion("rewardId =", value, "rewardid");
            return (Criteria) this;
        }

        public Criteria andRewardidNotEqualTo(Integer value) {
            addCriterion("rewardId <>", value, "rewardid");
            return (Criteria) this;
        }

        public Criteria andRewardidGreaterThan(Integer value) {
            addCriterion("rewardId >", value, "rewardid");
            return (Criteria) this;
        }

        public Criteria andRewardidGreaterThanOrEqualTo(Integer value) {
            addCriterion("rewardId >=", value, "rewardid");
            return (Criteria) this;
        }

        public Criteria andRewardidLessThan(Integer value) {
            addCriterion("rewardId <", value, "rewardid");
            return (Criteria) this;
        }

        public Criteria andRewardidLessThanOrEqualTo(Integer value) {
            addCriterion("rewardId <=", value, "rewardid");
            return (Criteria) this;
        }

        public Criteria andRewardidIn(List<Integer> values) {
            addCriterion("rewardId in", values, "rewardid");
            return (Criteria) this;
        }

        public Criteria andRewardidNotIn(List<Integer> values) {
            addCriterion("rewardId not in", values, "rewardid");
            return (Criteria) this;
        }

        public Criteria andRewardidBetween(Integer value1, Integer value2) {
            addCriterion("rewardId between", value1, value2, "rewardid");
            return (Criteria) this;
        }

        public Criteria andRewardidNotBetween(Integer value1, Integer value2) {
            addCriterion("rewardId not between", value1, value2, "rewardid");
            return (Criteria) this;
        }

        public Criteria andBeginvalueIsNull() {
            addCriterion("beginValue is null");
            return (Criteria) this;
        }

        public Criteria andBeginvalueIsNotNull() {
            addCriterion("beginValue is not null");
            return (Criteria) this;
        }

        public Criteria andBeginvalueEqualTo(Integer value) {
            addCriterion("beginValue =", value, "beginvalue");
            return (Criteria) this;
        }

        public Criteria andBeginvalueNotEqualTo(Integer value) {
            addCriterion("beginValue <>", value, "beginvalue");
            return (Criteria) this;
        }

        public Criteria andBeginvalueGreaterThan(Integer value) {
            addCriterion("beginValue >", value, "beginvalue");
            return (Criteria) this;
        }

        public Criteria andBeginvalueGreaterThanOrEqualTo(Integer value) {
            addCriterion("beginValue >=", value, "beginvalue");
            return (Criteria) this;
        }

        public Criteria andBeginvalueLessThan(Integer value) {
            addCriterion("beginValue <", value, "beginvalue");
            return (Criteria) this;
        }

        public Criteria andBeginvalueLessThanOrEqualTo(Integer value) {
            addCriterion("beginValue <=", value, "beginvalue");
            return (Criteria) this;
        }

        public Criteria andBeginvalueIn(List<Integer> values) {
            addCriterion("beginValue in", values, "beginvalue");
            return (Criteria) this;
        }

        public Criteria andBeginvalueNotIn(List<Integer> values) {
            addCriterion("beginValue not in", values, "beginvalue");
            return (Criteria) this;
        }

        public Criteria andBeginvalueBetween(Integer value1, Integer value2) {
            addCriterion("beginValue between", value1, value2, "beginvalue");
            return (Criteria) this;
        }

        public Criteria andBeginvalueNotBetween(Integer value1, Integer value2) {
            addCriterion("beginValue not between", value1, value2, "beginvalue");
            return (Criteria) this;
        }

        public Criteria andEndvalueIsNull() {
            addCriterion("endValue is null");
            return (Criteria) this;
        }

        public Criteria andEndvalueIsNotNull() {
            addCriterion("endValue is not null");
            return (Criteria) this;
        }

        public Criteria andEndvalueEqualTo(Integer value) {
            addCriterion("endValue =", value, "endvalue");
            return (Criteria) this;
        }

        public Criteria andEndvalueNotEqualTo(Integer value) {
            addCriterion("endValue <>", value, "endvalue");
            return (Criteria) this;
        }

        public Criteria andEndvalueGreaterThan(Integer value) {
            addCriterion("endValue >", value, "endvalue");
            return (Criteria) this;
        }

        public Criteria andEndvalueGreaterThanOrEqualTo(Integer value) {
            addCriterion("endValue >=", value, "endvalue");
            return (Criteria) this;
        }

        public Criteria andEndvalueLessThan(Integer value) {
            addCriterion("endValue <", value, "endvalue");
            return (Criteria) this;
        }

        public Criteria andEndvalueLessThanOrEqualTo(Integer value) {
            addCriterion("endValue <=", value, "endvalue");
            return (Criteria) this;
        }

        public Criteria andEndvalueIn(List<Integer> values) {
            addCriterion("endValue in", values, "endvalue");
            return (Criteria) this;
        }

        public Criteria andEndvalueNotIn(List<Integer> values) {
            addCriterion("endValue not in", values, "endvalue");
            return (Criteria) this;
        }

        public Criteria andEndvalueBetween(Integer value1, Integer value2) {
            addCriterion("endValue between", value1, value2, "endvalue");
            return (Criteria) this;
        }

        public Criteria andEndvalueNotBetween(Integer value1, Integer value2) {
            addCriterion("endValue not between", value1, value2, "endvalue");
            return (Criteria) this;
        }

        public Criteria andRewardhonorIsNull() {
            addCriterion("rewardHonor is null");
            return (Criteria) this;
        }

        public Criteria andRewardhonorIsNotNull() {
            addCriterion("rewardHonor is not null");
            return (Criteria) this;
        }

        public Criteria andRewardhonorEqualTo(Integer value) {
            addCriterion("rewardHonor =", value, "rewardhonor");
            return (Criteria) this;
        }

        public Criteria andRewardhonorNotEqualTo(Integer value) {
            addCriterion("rewardHonor <>", value, "rewardhonor");
            return (Criteria) this;
        }

        public Criteria andRewardhonorGreaterThan(Integer value) {
            addCriterion("rewardHonor >", value, "rewardhonor");
            return (Criteria) this;
        }

        public Criteria andRewardhonorGreaterThanOrEqualTo(Integer value) {
            addCriterion("rewardHonor >=", value, "rewardhonor");
            return (Criteria) this;
        }

        public Criteria andRewardhonorLessThan(Integer value) {
            addCriterion("rewardHonor <", value, "rewardhonor");
            return (Criteria) this;
        }

        public Criteria andRewardhonorLessThanOrEqualTo(Integer value) {
            addCriterion("rewardHonor <=", value, "rewardhonor");
            return (Criteria) this;
        }

        public Criteria andRewardhonorIn(List<Integer> values) {
            addCriterion("rewardHonor in", values, "rewardhonor");
            return (Criteria) this;
        }

        public Criteria andRewardhonorNotIn(List<Integer> values) {
            addCriterion("rewardHonor not in", values, "rewardhonor");
            return (Criteria) this;
        }

        public Criteria andRewardhonorBetween(Integer value1, Integer value2) {
            addCriterion("rewardHonor between", value1, value2, "rewardhonor");
            return (Criteria) this;
        }

        public Criteria andRewardhonorNotBetween(Integer value1, Integer value2) {
            addCriterion("rewardHonor not between", value1, value2,
                    "rewardhonor");
            return (Criteria) this;
        }

        public Criteria andSubhonorIsNull() {
            addCriterion("subHonor is null");
            return (Criteria) this;
        }

        public Criteria andSubhonorIsNotNull() {
            addCriterion("subHonor is not null");
            return (Criteria) this;
        }

        public Criteria andSubhonorEqualTo(Integer value) {
            addCriterion("subHonor =", value, "subhonor");
            return (Criteria) this;
        }

        public Criteria andSubhonorNotEqualTo(Integer value) {
            addCriterion("subHonor <>", value, "subhonor");
            return (Criteria) this;
        }

        public Criteria andSubhonorGreaterThan(Integer value) {
            addCriterion("subHonor >", value, "subhonor");
            return (Criteria) this;
        }

        public Criteria andSubhonorGreaterThanOrEqualTo(Integer value) {
            addCriterion("subHonor >=", value, "subhonor");
            return (Criteria) this;
        }

        public Criteria andSubhonorLessThan(Integer value) {
            addCriterion("subHonor <", value, "subhonor");
            return (Criteria) this;
        }

        public Criteria andSubhonorLessThanOrEqualTo(Integer value) {
            addCriterion("subHonor <=", value, "subhonor");
            return (Criteria) this;
        }

        public Criteria andSubhonorIn(List<Integer> values) {
            addCriterion("subHonor in", values, "subhonor");
            return (Criteria) this;
        }

        public Criteria andSubhonorNotIn(List<Integer> values) {
            addCriterion("subHonor not in", values, "subhonor");
            return (Criteria) this;
        }

        public Criteria andSubhonorBetween(Integer value1, Integer value2) {
            addCriterion("subHonor between", value1, value2, "subhonor");
            return (Criteria) this;
        }

        public Criteria andSubhonorNotBetween(Integer value1, Integer value2) {
            addCriterion("subHonor not between", value1, value2, "subhonor");
            return (Criteria) this;
        }

        public Criteria andBeginhonorIsNull() {
            addCriterion("beginHonor is null");
            return (Criteria) this;
        }

        public Criteria andBeginhonorIsNotNull() {
            addCriterion("beginHonor is not null");
            return (Criteria) this;
        }

        public Criteria andBeginhonorEqualTo(Integer value) {
            addCriterion("beginHonor =", value, "beginhonor");
            return (Criteria) this;
        }

        public Criteria andBeginhonorNotEqualTo(Integer value) {
            addCriterion("beginHonor <>", value, "beginhonor");
            return (Criteria) this;
        }

        public Criteria andBeginhonorGreaterThan(Integer value) {
            addCriterion("beginHonor >", value, "beginhonor");
            return (Criteria) this;
        }

        public Criteria andBeginhonorGreaterThanOrEqualTo(Integer value) {
            addCriterion("beginHonor >=", value, "beginhonor");
            return (Criteria) this;
        }

        public Criteria andBeginhonorLessThan(Integer value) {
            addCriterion("beginHonor <", value, "beginhonor");
            return (Criteria) this;
        }

        public Criteria andBeginhonorLessThanOrEqualTo(Integer value) {
            addCriterion("beginHonor <=", value, "beginhonor");
            return (Criteria) this;
        }

        public Criteria andBeginhonorIn(List<Integer> values) {
            addCriterion("beginHonor in", values, "beginhonor");
            return (Criteria) this;
        }

        public Criteria andBeginhonorNotIn(List<Integer> values) {
            addCriterion("beginHonor not in", values, "beginhonor");
            return (Criteria) this;
        }

        public Criteria andBeginhonorBetween(Integer value1, Integer value2) {
            addCriterion("beginHonor between", value1, value2, "beginhonor");
            return (Criteria) this;
        }

        public Criteria andBeginhonorNotBetween(Integer value1, Integer value2) {
            addCriterion("beginHonor not between", value1, value2, "beginhonor");
            return (Criteria) this;
        }

        public Criteria andEndhonorIsNull() {
            addCriterion("endHonor is null");
            return (Criteria) this;
        }

        public Criteria andEndhonorIsNotNull() {
            addCriterion("endHonor is not null");
            return (Criteria) this;
        }

        public Criteria andEndhonorEqualTo(Integer value) {
            addCriterion("endHonor =", value, "endhonor");
            return (Criteria) this;
        }

        public Criteria andEndhonorNotEqualTo(Integer value) {
            addCriterion("endHonor <>", value, "endhonor");
            return (Criteria) this;
        }

        public Criteria andEndhonorGreaterThan(Integer value) {
            addCriterion("endHonor >", value, "endhonor");
            return (Criteria) this;
        }

        public Criteria andEndhonorGreaterThanOrEqualTo(Integer value) {
            addCriterion("endHonor >=", value, "endhonor");
            return (Criteria) this;
        }

        public Criteria andEndhonorLessThan(Integer value) {
            addCriterion("endHonor <", value, "endhonor");
            return (Criteria) this;
        }

        public Criteria andEndhonorLessThanOrEqualTo(Integer value) {
            addCriterion("endHonor <=", value, "endhonor");
            return (Criteria) this;
        }

        public Criteria andEndhonorIn(List<Integer> values) {
            addCriterion("endHonor in", values, "endhonor");
            return (Criteria) this;
        }

        public Criteria andEndhonorNotIn(List<Integer> values) {
            addCriterion("endHonor not in", values, "endhonor");
            return (Criteria) this;
        }

        public Criteria andEndhonorBetween(Integer value1, Integer value2) {
            addCriterion("endHonor between", value1, value2, "endhonor");
            return (Criteria) this;
        }

        public Criteria andEndhonorNotBetween(Integer value1, Integer value2) {
            addCriterion("endHonor not between", value1, value2, "endhonor");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table DicHonorReward
     *
     * @mbggenerated Tue Jan 06 15:42:50 CST 2015
     */
    public static class Criterion {
        private String condition;
        private Object value;
        private Object secondValue;
        private boolean noValue;
        private boolean singleValue;
        private boolean betweenValue;
        private boolean listValue;
        private String typeHandler;

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue,
                            String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table DicHonorReward
     *
     * @mbggenerated do_not_delete_during_merge Tue Jan 06 15:32:40 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}