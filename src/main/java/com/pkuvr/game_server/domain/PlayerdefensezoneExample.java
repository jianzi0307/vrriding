package com.pkuvr.game_server.domain;

import java.util.ArrayList;
import java.util.List;

public class PlayerdefensezoneExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PlayerDefenseZone
     *
     * @mbggenerated Thu May 19 12:37:02 CST 2016
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PlayerDefenseZone
     *
     * @mbggenerated Thu May 19 12:37:02 CST 2016
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PlayerDefenseZone
     *
     * @mbggenerated Thu May 19 12:37:02 CST 2016
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PlayerDefenseZone
     *
     * @mbggenerated Thu May 19 12:37:02 CST 2016
     */
    public PlayerdefensezoneExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PlayerDefenseZone
     *
     * @mbggenerated Thu May 19 12:37:02 CST 2016
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PlayerDefenseZone
     *
     * @mbggenerated Thu May 19 12:37:02 CST 2016
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PlayerDefenseZone
     *
     * @mbggenerated Thu May 19 12:37:02 CST 2016
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PlayerDefenseZone
     *
     * @mbggenerated Thu May 19 12:37:02 CST 2016
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PlayerDefenseZone
     *
     * @mbggenerated Thu May 19 12:37:02 CST 2016
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PlayerDefenseZone
     *
     * @mbggenerated Thu May 19 12:37:02 CST 2016
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PlayerDefenseZone
     *
     * @mbggenerated Thu May 19 12:37:02 CST 2016
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PlayerDefenseZone
     *
     * @mbggenerated Thu May 19 12:37:02 CST 2016
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PlayerDefenseZone
     *
     * @mbggenerated Thu May 19 12:37:02 CST 2016
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PlayerDefenseZone
     *
     * @mbggenerated Thu May 19 12:37:02 CST 2016
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PlayerDefenseZone
     *
     * @mbggenerated Thu May 19 12:37:02 CST 2016
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andRoleidIsNull() {
            addCriterion("roleID is null");
            return (Criteria) this;
        }

        public Criteria andRoleidIsNotNull() {
            addCriterion("roleID is not null");
            return (Criteria) this;
        }

        public Criteria andRoleidEqualTo(Integer value) {
            addCriterion("roleID =", value, "roleid");
            return (Criteria) this;
        }

        public Criteria andRoleidNotEqualTo(Integer value) {
            addCriterion("roleID <>", value, "roleid");
            return (Criteria) this;
        }

        public Criteria andRoleidGreaterThan(Integer value) {
            addCriterion("roleID >", value, "roleid");
            return (Criteria) this;
        }

        public Criteria andRoleidGreaterThanOrEqualTo(Integer value) {
            addCriterion("roleID >=", value, "roleid");
            return (Criteria) this;
        }

        public Criteria andRoleidLessThan(Integer value) {
            addCriterion("roleID <", value, "roleid");
            return (Criteria) this;
        }

        public Criteria andRoleidLessThanOrEqualTo(Integer value) {
            addCriterion("roleID <=", value, "roleid");
            return (Criteria) this;
        }

        public Criteria andRoleidIn(List<Integer> values) {
            addCriterion("roleID in", values, "roleid");
            return (Criteria) this;
        }

        public Criteria andRoleidNotIn(List<Integer> values) {
            addCriterion("roleID not in", values, "roleid");
            return (Criteria) this;
        }

        public Criteria andRoleidBetween(Integer value1, Integer value2) {
            addCriterion("roleID between", value1, value2, "roleid");
            return (Criteria) this;
        }

        public Criteria andRoleidNotBetween(Integer value1, Integer value2) {
            addCriterion("roleID not between", value1, value2, "roleid");
            return (Criteria) this;
        }

        public Criteria andBlockhousenpcinfoIsNull() {
            addCriterion("blockHouseNPCInfo is null");
            return (Criteria) this;
        }

        public Criteria andBlockhousenpcinfoIsNotNull() {
            addCriterion("blockHouseNPCInfo is not null");
            return (Criteria) this;
        }

        public Criteria andBlockhousenpcinfoEqualTo(String value) {
            addCriterion("blockHouseNPCInfo =", value, "blockhousenpcinfo");
            return (Criteria) this;
        }

        public Criteria andBlockhousenpcinfoNotEqualTo(String value) {
            addCriterion("blockHouseNPCInfo <>", value, "blockhousenpcinfo");
            return (Criteria) this;
        }

        public Criteria andBlockhousenpcinfoGreaterThan(String value) {
            addCriterion("blockHouseNPCInfo >", value, "blockhousenpcinfo");
            return (Criteria) this;
        }

        public Criteria andBlockhousenpcinfoGreaterThanOrEqualTo(String value) {
            addCriterion("blockHouseNPCInfo >=", value, "blockhousenpcinfo");
            return (Criteria) this;
        }

        public Criteria andBlockhousenpcinfoLessThan(String value) {
            addCriterion("blockHouseNPCInfo <", value, "blockhousenpcinfo");
            return (Criteria) this;
        }

        public Criteria andBlockhousenpcinfoLessThanOrEqualTo(String value) {
            addCriterion("blockHouseNPCInfo <=", value, "blockhousenpcinfo");
            return (Criteria) this;
        }

        public Criteria andBlockhousenpcinfoLike(String value) {
            addCriterion("blockHouseNPCInfo like", value, "blockhousenpcinfo");
            return (Criteria) this;
        }

        public Criteria andBlockhousenpcinfoNotLike(String value) {
            addCriterion("blockHouseNPCInfo not like", value, "blockhousenpcinfo");
            return (Criteria) this;
        }

        public Criteria andBlockhousenpcinfoIn(List<String> values) {
            addCriterion("blockHouseNPCInfo in", values, "blockhousenpcinfo");
            return (Criteria) this;
        }

        public Criteria andBlockhousenpcinfoNotIn(List<String> values) {
            addCriterion("blockHouseNPCInfo not in", values, "blockhousenpcinfo");
            return (Criteria) this;
        }

        public Criteria andBlockhousenpcinfoBetween(String value1, String value2) {
            addCriterion("blockHouseNPCInfo between", value1, value2, "blockhousenpcinfo");
            return (Criteria) this;
        }

        public Criteria andBlockhousenpcinfoNotBetween(String value1, String value2) {
            addCriterion("blockHouseNPCInfo not between", value1, value2, "blockhousenpcinfo");
            return (Criteria) this;
        }

        public Criteria andCommanderinstructionIsNull() {
            addCriterion("commanderInstruction is null");
            return (Criteria) this;
        }

        public Criteria andCommanderinstructionIsNotNull() {
            addCriterion("commanderInstruction is not null");
            return (Criteria) this;
        }

        public Criteria andCommanderinstructionEqualTo(Integer value) {
            addCriterion("commanderInstruction =", value, "commanderinstruction");
            return (Criteria) this;
        }

        public Criteria andCommanderinstructionNotEqualTo(Integer value) {
            addCriterion("commanderInstruction <>", value, "commanderinstruction");
            return (Criteria) this;
        }

        public Criteria andCommanderinstructionGreaterThan(Integer value) {
            addCriterion("commanderInstruction >", value, "commanderinstruction");
            return (Criteria) this;
        }

        public Criteria andCommanderinstructionGreaterThanOrEqualTo(Integer value) {
            addCriterion("commanderInstruction >=", value, "commanderinstruction");
            return (Criteria) this;
        }

        public Criteria andCommanderinstructionLessThan(Integer value) {
            addCriterion("commanderInstruction <", value, "commanderinstruction");
            return (Criteria) this;
        }

        public Criteria andCommanderinstructionLessThanOrEqualTo(Integer value) {
            addCriterion("commanderInstruction <=", value, "commanderinstruction");
            return (Criteria) this;
        }

        public Criteria andCommanderinstructionIn(List<Integer> values) {
            addCriterion("commanderInstruction in", values, "commanderinstruction");
            return (Criteria) this;
        }

        public Criteria andCommanderinstructionNotIn(List<Integer> values) {
            addCriterion("commanderInstruction not in", values, "commanderinstruction");
            return (Criteria) this;
        }

        public Criteria andCommanderinstructionBetween(Integer value1, Integer value2) {
            addCriterion("commanderInstruction between", value1, value2, "commanderinstruction");
            return (Criteria) this;
        }

        public Criteria andCommanderinstructionNotBetween(Integer value1, Integer value2) {
            addCriterion("commanderInstruction not between", value1, value2, "commanderinstruction");
            return (Criteria) this;
        }

        public Criteria andLandmineinfoIsNull() {
            addCriterion("landMineInfo is null");
            return (Criteria) this;
        }

        public Criteria andLandmineinfoIsNotNull() {
            addCriterion("landMineInfo is not null");
            return (Criteria) this;
        }

        public Criteria andLandmineinfoEqualTo(String value) {
            addCriterion("landMineInfo =", value, "landmineinfo");
            return (Criteria) this;
        }

        public Criteria andLandmineinfoNotEqualTo(String value) {
            addCriterion("landMineInfo <>", value, "landmineinfo");
            return (Criteria) this;
        }

        public Criteria andLandmineinfoGreaterThan(String value) {
            addCriterion("landMineInfo >", value, "landmineinfo");
            return (Criteria) this;
        }

        public Criteria andLandmineinfoGreaterThanOrEqualTo(String value) {
            addCriterion("landMineInfo >=", value, "landmineinfo");
            return (Criteria) this;
        }

        public Criteria andLandmineinfoLessThan(String value) {
            addCriterion("landMineInfo <", value, "landmineinfo");
            return (Criteria) this;
        }

        public Criteria andLandmineinfoLessThanOrEqualTo(String value) {
            addCriterion("landMineInfo <=", value, "landmineinfo");
            return (Criteria) this;
        }

        public Criteria andLandmineinfoLike(String value) {
            addCriterion("landMineInfo like", value, "landmineinfo");
            return (Criteria) this;
        }

        public Criteria andLandmineinfoNotLike(String value) {
            addCriterion("landMineInfo not like", value, "landmineinfo");
            return (Criteria) this;
        }

        public Criteria andLandmineinfoIn(List<String> values) {
            addCriterion("landMineInfo in", values, "landmineinfo");
            return (Criteria) this;
        }

        public Criteria andLandmineinfoNotIn(List<String> values) {
            addCriterion("landMineInfo not in", values, "landmineinfo");
            return (Criteria) this;
        }

        public Criteria andLandmineinfoBetween(String value1, String value2) {
            addCriterion("landMineInfo between", value1, value2, "landmineinfo");
            return (Criteria) this;
        }

        public Criteria andLandmineinfoNotBetween(String value1, String value2) {
            addCriterion("landMineInfo not between", value1, value2, "landmineinfo");
            return (Criteria) this;
        }

        public Criteria andAttackedtimesIsNull() {
            addCriterion("attackedTimes is null");
            return (Criteria) this;
        }

        public Criteria andAttackedtimesIsNotNull() {
            addCriterion("attackedTimes is not null");
            return (Criteria) this;
        }

        public Criteria andAttackedtimesEqualTo(Integer value) {
            addCriterion("attackedTimes =", value, "attackedtimes");
            return (Criteria) this;
        }

        public Criteria andAttackedtimesNotEqualTo(Integer value) {
            addCriterion("attackedTimes <>", value, "attackedtimes");
            return (Criteria) this;
        }

        public Criteria andAttackedtimesGreaterThan(Integer value) {
            addCriterion("attackedTimes >", value, "attackedtimes");
            return (Criteria) this;
        }

        public Criteria andAttackedtimesGreaterThanOrEqualTo(Integer value) {
            addCriterion("attackedTimes >=", value, "attackedtimes");
            return (Criteria) this;
        }

        public Criteria andAttackedtimesLessThan(Integer value) {
            addCriterion("attackedTimes <", value, "attackedtimes");
            return (Criteria) this;
        }

        public Criteria andAttackedtimesLessThanOrEqualTo(Integer value) {
            addCriterion("attackedTimes <=", value, "attackedtimes");
            return (Criteria) this;
        }

        public Criteria andAttackedtimesIn(List<Integer> values) {
            addCriterion("attackedTimes in", values, "attackedtimes");
            return (Criteria) this;
        }

        public Criteria andAttackedtimesNotIn(List<Integer> values) {
            addCriterion("attackedTimes not in", values, "attackedtimes");
            return (Criteria) this;
        }

        public Criteria andAttackedtimesBetween(Integer value1, Integer value2) {
            addCriterion("attackedTimes between", value1, value2, "attackedtimes");
            return (Criteria) this;
        }

        public Criteria andAttackedtimesNotBetween(Integer value1, Integer value2) {
            addCriterion("attackedTimes not between", value1, value2, "attackedtimes");
            return (Criteria) this;
        }

        public Criteria andIsprotectedIsNull() {
            addCriterion("isProtected is null");
            return (Criteria) this;
        }

        public Criteria andIsprotectedIsNotNull() {
            addCriterion("isProtected is not null");
            return (Criteria) this;
        }

        public Criteria andIsprotectedEqualTo(Boolean value) {
            addCriterion("isProtected =", value, "isprotected");
            return (Criteria) this;
        }

        public Criteria andIsprotectedNotEqualTo(Boolean value) {
            addCriterion("isProtected <>", value, "isprotected");
            return (Criteria) this;
        }

        public Criteria andIsprotectedGreaterThan(Boolean value) {
            addCriterion("isProtected >", value, "isprotected");
            return (Criteria) this;
        }

        public Criteria andIsprotectedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("isProtected >=", value, "isprotected");
            return (Criteria) this;
        }

        public Criteria andIsprotectedLessThan(Boolean value) {
            addCriterion("isProtected <", value, "isprotected");
            return (Criteria) this;
        }

        public Criteria andIsprotectedLessThanOrEqualTo(Boolean value) {
            addCriterion("isProtected <=", value, "isprotected");
            return (Criteria) this;
        }

        public Criteria andIsprotectedIn(List<Boolean> values) {
            addCriterion("isProtected in", values, "isprotected");
            return (Criteria) this;
        }

        public Criteria andIsprotectedNotIn(List<Boolean> values) {
            addCriterion("isProtected not in", values, "isprotected");
            return (Criteria) this;
        }

        public Criteria andIsprotectedBetween(Boolean value1, Boolean value2) {
            addCriterion("isProtected between", value1, value2, "isprotected");
            return (Criteria) this;
        }

        public Criteria andIsprotectedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("isProtected not between", value1, value2, "isprotected");
            return (Criteria) this;
        }

        public Criteria andProtectedtimeIsNull() {
            addCriterion("protectedTime is null");
            return (Criteria) this;
        }

        public Criteria andProtectedtimeIsNotNull() {
            addCriterion("protectedTime is not null");
            return (Criteria) this;
        }

        public Criteria andProtectedtimeEqualTo(Long value) {
            addCriterion("protectedTime =", value, "protectedtime");
            return (Criteria) this;
        }

        public Criteria andProtectedtimeNotEqualTo(Long value) {
            addCriterion("protectedTime <>", value, "protectedtime");
            return (Criteria) this;
        }

        public Criteria andProtectedtimeGreaterThan(Long value) {
            addCriterion("protectedTime >", value, "protectedtime");
            return (Criteria) this;
        }

        public Criteria andProtectedtimeGreaterThanOrEqualTo(Long value) {
            addCriterion("protectedTime >=", value, "protectedtime");
            return (Criteria) this;
        }

        public Criteria andProtectedtimeLessThan(Long value) {
            addCriterion("protectedTime <", value, "protectedtime");
            return (Criteria) this;
        }

        public Criteria andProtectedtimeLessThanOrEqualTo(Long value) {
            addCriterion("protectedTime <=", value, "protectedtime");
            return (Criteria) this;
        }

        public Criteria andProtectedtimeIn(List<Long> values) {
            addCriterion("protectedTime in", values, "protectedtime");
            return (Criteria) this;
        }

        public Criteria andProtectedtimeNotIn(List<Long> values) {
            addCriterion("protectedTime not in", values, "protectedtime");
            return (Criteria) this;
        }

        public Criteria andProtectedtimeBetween(Long value1, Long value2) {
            addCriterion("protectedTime between", value1, value2, "protectedtime");
            return (Criteria) this;
        }

        public Criteria andProtectedtimeNotBetween(Long value1, Long value2) {
            addCriterion("protectedTime not between", value1, value2, "protectedtime");
            return (Criteria) this;
        }

        public Criteria andIseverprotectedIsNull() {
            addCriterion("isEverProtected is null");
            return (Criteria) this;
        }

        public Criteria andIseverprotectedIsNotNull() {
            addCriterion("isEverProtected is not null");
            return (Criteria) this;
        }

        public Criteria andIseverprotectedEqualTo(Boolean value) {
            addCriterion("isEverProtected =", value, "iseverprotected");
            return (Criteria) this;
        }

        public Criteria andIseverprotectedNotEqualTo(Boolean value) {
            addCriterion("isEverProtected <>", value, "iseverprotected");
            return (Criteria) this;
        }

        public Criteria andIseverprotectedGreaterThan(Boolean value) {
            addCriterion("isEverProtected >", value, "iseverprotected");
            return (Criteria) this;
        }

        public Criteria andIseverprotectedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("isEverProtected >=", value, "iseverprotected");
            return (Criteria) this;
        }

        public Criteria andIseverprotectedLessThan(Boolean value) {
            addCriterion("isEverProtected <", value, "iseverprotected");
            return (Criteria) this;
        }

        public Criteria andIseverprotectedLessThanOrEqualTo(Boolean value) {
            addCriterion("isEverProtected <=", value, "iseverprotected");
            return (Criteria) this;
        }

        public Criteria andIseverprotectedIn(List<Boolean> values) {
            addCriterion("isEverProtected in", values, "iseverprotected");
            return (Criteria) this;
        }

        public Criteria andIseverprotectedNotIn(List<Boolean> values) {
            addCriterion("isEverProtected not in", values, "iseverprotected");
            return (Criteria) this;
        }

        public Criteria andIseverprotectedBetween(Boolean value1, Boolean value2) {
            addCriterion("isEverProtected between", value1, value2, "iseverprotected");
            return (Criteria) this;
        }

        public Criteria andIseverprotectedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("isEverProtected not between", value1, value2, "iseverprotected");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PlayerDefenseZone
     *
     * @mbggenerated do_not_delete_during_merge Thu May 19 12:37:02 CST 2016
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PlayerDefenseZone
     *
     * @mbggenerated Thu May 19 12:37:02 CST 2016
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }
    }
}