package com.pkuvr.game_server.domain;

import java.util.ArrayList;
import java.util.List;

public class PlayerzoneplunderExample {
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table PlayerZonePlunder
     *
     * @mbggenerated Tue Nov 24 19:24:49 CST 2015
     */
    protected String orderByClause;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table PlayerZonePlunder
     *
     * @mbggenerated Tue Nov 24 19:24:49 CST 2015
     */
    protected boolean distinct;
    /**
     * This field was generated by MyBatis Generator. This field corresponds to the database table PlayerZonePlunder
     *
     * @mbggenerated Tue Nov 24 19:24:49 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PlayerZonePlunder
     *
     * @mbggenerated Tue Nov 24 19:24:49 CST 2015
     */
    public PlayerzoneplunderExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PlayerZonePlunder
     *
     * @mbggenerated Tue Nov 24 19:24:49 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PlayerZonePlunder
     *
     * @mbggenerated Tue Nov 24 19:24:49 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PlayerZonePlunder
     *
     * @mbggenerated Tue Nov 24 19:24:49 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PlayerZonePlunder
     *
     * @mbggenerated Tue Nov 24 19:24:49 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PlayerZonePlunder
     *
     * @mbggenerated Tue Nov 24 19:24:49 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PlayerZonePlunder
     *
     * @mbggenerated Tue Nov 24 19:24:49 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PlayerZonePlunder
     *
     * @mbggenerated Tue Nov 24 19:24:49 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PlayerZonePlunder
     *
     * @mbggenerated Tue Nov 24 19:24:49 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PlayerZonePlunder
     *
     * @mbggenerated Tue Nov 24 19:24:49 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table PlayerZonePlunder
     *
     * @mbggenerated Tue Nov 24 19:24:49 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table PlayerZonePlunder
     *
     * @mbggenerated Tue Nov 24 19:24:49 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value,
                                    String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property
                        + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1,
                                    Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property
                        + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andRoleidIsNull() {
            addCriterion("roleID is null");
            return (Criteria) this;
        }

        public Criteria andRoleidIsNotNull() {
            addCriterion("roleID is not null");
            return (Criteria) this;
        }

        public Criteria andRoleidEqualTo(Integer value) {
            addCriterion("roleID =", value, "roleid");
            return (Criteria) this;
        }

        public Criteria andRoleidNotEqualTo(Integer value) {
            addCriterion("roleID <>", value, "roleid");
            return (Criteria) this;
        }

        public Criteria andRoleidGreaterThan(Integer value) {
            addCriterion("roleID >", value, "roleid");
            return (Criteria) this;
        }

        public Criteria andRoleidGreaterThanOrEqualTo(Integer value) {
            addCriterion("roleID >=", value, "roleid");
            return (Criteria) this;
        }

        public Criteria andRoleidLessThan(Integer value) {
            addCriterion("roleID <", value, "roleid");
            return (Criteria) this;
        }

        public Criteria andRoleidLessThanOrEqualTo(Integer value) {
            addCriterion("roleID <=", value, "roleid");
            return (Criteria) this;
        }

        public Criteria andRoleidIn(List<Integer> values) {
            addCriterion("roleID in", values, "roleid");
            return (Criteria) this;
        }

        public Criteria andRoleidNotIn(List<Integer> values) {
            addCriterion("roleID not in", values, "roleid");
            return (Criteria) this;
        }

        public Criteria andRoleidBetween(Integer value1, Integer value2) {
            addCriterion("roleID between", value1, value2, "roleid");
            return (Criteria) this;
        }

        public Criteria andRoleidNotBetween(Integer value1, Integer value2) {
            addCriterion("roleID not between", value1, value2, "roleid");
            return (Criteria) this;
        }

        public Criteria andResmineidIsNull() {
            addCriterion("resMineID is null");
            return (Criteria) this;
        }

        public Criteria andResmineidIsNotNull() {
            addCriterion("resMineID is not null");
            return (Criteria) this;
        }

        public Criteria andResmineidEqualTo(Integer value) {
            addCriterion("resMineID =", value, "resmineid");
            return (Criteria) this;
        }

        public Criteria andResmineidNotEqualTo(Integer value) {
            addCriterion("resMineID <>", value, "resmineid");
            return (Criteria) this;
        }

        public Criteria andResmineidGreaterThan(Integer value) {
            addCriterion("resMineID >", value, "resmineid");
            return (Criteria) this;
        }

        public Criteria andResmineidGreaterThanOrEqualTo(Integer value) {
            addCriterion("resMineID >=", value, "resmineid");
            return (Criteria) this;
        }

        public Criteria andResmineidLessThan(Integer value) {
            addCriterion("resMineID <", value, "resmineid");
            return (Criteria) this;
        }

        public Criteria andResmineidLessThanOrEqualTo(Integer value) {
            addCriterion("resMineID <=", value, "resmineid");
            return (Criteria) this;
        }

        public Criteria andResmineidIn(List<Integer> values) {
            addCriterion("resMineID in", values, "resmineid");
            return (Criteria) this;
        }

        public Criteria andResmineidNotIn(List<Integer> values) {
            addCriterion("resMineID not in", values, "resmineid");
            return (Criteria) this;
        }

        public Criteria andResmineidBetween(Integer value1, Integer value2) {
            addCriterion("resMineID between", value1, value2, "resmineid");
            return (Criteria) this;
        }

        public Criteria andResmineidNotBetween(Integer value1, Integer value2) {
            addCriterion("resMineID not between", value1, value2, "resmineid");
            return (Criteria) this;
        }

        public Criteria andPlunderroleidIsNull() {
            addCriterion("plunderRoleID is null");
            return (Criteria) this;
        }

        public Criteria andPlunderroleidIsNotNull() {
            addCriterion("plunderRoleID is not null");
            return (Criteria) this;
        }

        public Criteria andPlunderroleidEqualTo(Integer value) {
            addCriterion("plunderRoleID =", value, "plunderroleid");
            return (Criteria) this;
        }

        public Criteria andPlunderroleidNotEqualTo(Integer value) {
            addCriterion("plunderRoleID <>", value, "plunderroleid");
            return (Criteria) this;
        }

        public Criteria andPlunderroleidGreaterThan(Integer value) {
            addCriterion("plunderRoleID >", value, "plunderroleid");
            return (Criteria) this;
        }

        public Criteria andPlunderroleidGreaterThanOrEqualTo(Integer value) {
            addCriterion("plunderRoleID >=", value, "plunderroleid");
            return (Criteria) this;
        }

        public Criteria andPlunderroleidLessThan(Integer value) {
            addCriterion("plunderRoleID <", value, "plunderroleid");
            return (Criteria) this;
        }

        public Criteria andPlunderroleidLessThanOrEqualTo(Integer value) {
            addCriterion("plunderRoleID <=", value, "plunderroleid");
            return (Criteria) this;
        }

        public Criteria andPlunderroleidIn(List<Integer> values) {
            addCriterion("plunderRoleID in", values, "plunderroleid");
            return (Criteria) this;
        }

        public Criteria andPlunderroleidNotIn(List<Integer> values) {
            addCriterion("plunderRoleID not in", values, "plunderroleid");
            return (Criteria) this;
        }

        public Criteria andPlunderroleidBetween(Integer value1, Integer value2) {
            addCriterion("plunderRoleID between", value1, value2,
                    "plunderroleid");
            return (Criteria) this;
        }

        public Criteria andPlunderroleidNotBetween(Integer value1,
                                                   Integer value2) {
            addCriterion("plunderRoleID not between", value1, value2,
                    "plunderroleid");
            return (Criteria) this;
        }

        public Criteria andIsplunderIsNull() {
            addCriterion("isPlunder is null");
            return (Criteria) this;
        }

        public Criteria andIsplunderIsNotNull() {
            addCriterion("isPlunder is not null");
            return (Criteria) this;
        }

        public Criteria andIsplunderEqualTo(Boolean value) {
            addCriterion("isPlunder =", value, "isplunder");
            return (Criteria) this;
        }

        public Criteria andIsplunderNotEqualTo(Boolean value) {
            addCriterion("isPlunder <>", value, "isplunder");
            return (Criteria) this;
        }

        public Criteria andIsplunderGreaterThan(Boolean value) {
            addCriterion("isPlunder >", value, "isplunder");
            return (Criteria) this;
        }

        public Criteria andIsplunderGreaterThanOrEqualTo(Boolean value) {
            addCriterion("isPlunder >=", value, "isplunder");
            return (Criteria) this;
        }

        public Criteria andIsplunderLessThan(Boolean value) {
            addCriterion("isPlunder <", value, "isplunder");
            return (Criteria) this;
        }

        public Criteria andIsplunderLessThanOrEqualTo(Boolean value) {
            addCriterion("isPlunder <=", value, "isplunder");
            return (Criteria) this;
        }

        public Criteria andIsplunderIn(List<Boolean> values) {
            addCriterion("isPlunder in", values, "isplunder");
            return (Criteria) this;
        }

        public Criteria andIsplunderNotIn(List<Boolean> values) {
            addCriterion("isPlunder not in", values, "isplunder");
            return (Criteria) this;
        }

        public Criteria andIsplunderBetween(Boolean value1, Boolean value2) {
            addCriterion("isPlunder between", value1, value2, "isplunder");
            return (Criteria) this;
        }

        public Criteria andIsplunderNotBetween(Boolean value1, Boolean value2) {
            addCriterion("isPlunder not between", value1, value2, "isplunder");
            return (Criteria) this;
        }

        public Criteria andPlundertimeIsNull() {
            addCriterion("plunderTime is null");
            return (Criteria) this;
        }

        public Criteria andPlundertimeIsNotNull() {
            addCriterion("plunderTime is not null");
            return (Criteria) this;
        }

        public Criteria andPlundertimeEqualTo(Long value) {
            addCriterion("plunderTime =", value, "plundertime");
            return (Criteria) this;
        }

        public Criteria andPlundertimeNotEqualTo(Long value) {
            addCriterion("plunderTime <>", value, "plundertime");
            return (Criteria) this;
        }

        public Criteria andPlundertimeGreaterThan(Long value) {
            addCriterion("plunderTime >", value, "plundertime");
            return (Criteria) this;
        }

        public Criteria andPlundertimeGreaterThanOrEqualTo(Long value) {
            addCriterion("plunderTime >=", value, "plundertime");
            return (Criteria) this;
        }

        public Criteria andPlundertimeLessThan(Long value) {
            addCriterion("plunderTime <", value, "plundertime");
            return (Criteria) this;
        }

        public Criteria andPlundertimeLessThanOrEqualTo(Long value) {
            addCriterion("plunderTime <=", value, "plundertime");
            return (Criteria) this;
        }

        public Criteria andPlundertimeIn(List<Long> values) {
            addCriterion("plunderTime in", values, "plundertime");
            return (Criteria) this;
        }

        public Criteria andPlundertimeNotIn(List<Long> values) {
            addCriterion("plunderTime not in", values, "plundertime");
            return (Criteria) this;
        }

        public Criteria andPlundertimeBetween(Long value1, Long value2) {
            addCriterion("plunderTime between", value1, value2, "plundertime");
            return (Criteria) this;
        }

        public Criteria andPlundertimeNotBetween(Long value1, Long value2) {
            addCriterion("plunderTime not between", value1, value2,
                    "plundertime");
            return (Criteria) this;
        }

        public Criteria andRefreshtimeIsNull() {
            addCriterion("refreshTime is null");
            return (Criteria) this;
        }

        public Criteria andRefreshtimeIsNotNull() {
            addCriterion("refreshTime is not null");
            return (Criteria) this;
        }

        public Criteria andRefreshtimeEqualTo(Long value) {
            addCriterion("refreshTime =", value, "refreshtime");
            return (Criteria) this;
        }

        public Criteria andRefreshtimeNotEqualTo(Long value) {
            addCriterion("refreshTime <>", value, "refreshtime");
            return (Criteria) this;
        }

        public Criteria andRefreshtimeGreaterThan(Long value) {
            addCriterion("refreshTime >", value, "refreshtime");
            return (Criteria) this;
        }

        public Criteria andRefreshtimeGreaterThanOrEqualTo(Long value) {
            addCriterion("refreshTime >=", value, "refreshtime");
            return (Criteria) this;
        }

        public Criteria andRefreshtimeLessThan(Long value) {
            addCriterion("refreshTime <", value, "refreshtime");
            return (Criteria) this;
        }

        public Criteria andRefreshtimeLessThanOrEqualTo(Long value) {
            addCriterion("refreshTime <=", value, "refreshtime");
            return (Criteria) this;
        }

        public Criteria andRefreshtimeIn(List<Long> values) {
            addCriterion("refreshTime in", values, "refreshtime");
            return (Criteria) this;
        }

        public Criteria andRefreshtimeNotIn(List<Long> values) {
            addCriterion("refreshTime not in", values, "refreshtime");
            return (Criteria) this;
        }

        public Criteria andRefreshtimeBetween(Long value1, Long value2) {
            addCriterion("refreshTime between", value1, value2, "refreshtime");
            return (Criteria) this;
        }

        public Criteria andRefreshtimeNotBetween(Long value1, Long value2) {
            addCriterion("refreshTime not between", value1, value2,
                    "refreshtime");
            return (Criteria) this;
        }

        public Criteria andIsunlockIsNull() {
            addCriterion("isUnlock is null");
            return (Criteria) this;
        }

        public Criteria andIsunlockIsNotNull() {
            addCriterion("isUnlock is not null");
            return (Criteria) this;
        }

        public Criteria andIsunlockEqualTo(Boolean value) {
            addCriterion("isUnlock =", value, "isunlock");
            return (Criteria) this;
        }

        public Criteria andIsunlockNotEqualTo(Boolean value) {
            addCriterion("isUnlock <>", value, "isunlock");
            return (Criteria) this;
        }

        public Criteria andIsunlockGreaterThan(Boolean value) {
            addCriterion("isUnlock >", value, "isunlock");
            return (Criteria) this;
        }

        public Criteria andIsunlockGreaterThanOrEqualTo(Boolean value) {
            addCriterion("isUnlock >=", value, "isunlock");
            return (Criteria) this;
        }

        public Criteria andIsunlockLessThan(Boolean value) {
            addCriterion("isUnlock <", value, "isunlock");
            return (Criteria) this;
        }

        public Criteria andIsunlockLessThanOrEqualTo(Boolean value) {
            addCriterion("isUnlock <=", value, "isunlock");
            return (Criteria) this;
        }

        public Criteria andIsunlockIn(List<Boolean> values) {
            addCriterion("isUnlock in", values, "isunlock");
            return (Criteria) this;
        }

        public Criteria andIsunlockNotIn(List<Boolean> values) {
            addCriterion("isUnlock not in", values, "isunlock");
            return (Criteria) this;
        }

        public Criteria andIsunlockBetween(Boolean value1, Boolean value2) {
            addCriterion("isUnlock between", value1, value2, "isunlock");
            return (Criteria) this;
        }

        public Criteria andIsunlockNotBetween(Boolean value1, Boolean value2) {
            addCriterion("isUnlock not between", value1, value2, "isunlock");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator. This class corresponds to the database table PlayerZonePlunder
     *
     * @mbggenerated Tue Nov 24 19:24:49 CST 2015
     */
    public static class Criterion {
        private String condition;
        private Object value;
        private Object secondValue;
        private boolean noValue;
        private boolean singleValue;
        private boolean betweenValue;
        private boolean listValue;
        private String typeHandler;

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue,
                            String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PlayerZonePlunder
     *
     * @mbggenerated do_not_delete_during_merge Fri Nov 06 15:17:52 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}